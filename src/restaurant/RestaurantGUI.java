/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package restaurant;

import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RandyNguyen
 */
public class RestaurantGUI extends javax.swing.JFrame {

    static Employee emp;
    public static Map<String, MenuItem> menu;
    public static ArrayList<String> menuItems;
    public static Map<String, Employee> employees;

    private DefaultTableModel stockTable;
    public static Table table;
    private DefaultTableModel menuTable;
    private DefaultTableModel tableBill;

    /**
     * Creates new form RestaurantGUI
     */
    public RestaurantGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator7 = new javax.swing.JSeparator();
        jTextField5 = new javax.swing.JTextField();
        ContentPane = new javax.swing.JPanel();
        LoginPanel = new javax.swing.JPanel();
        LoginScreenExitButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        UsernameTextField = new javax.swing.JTextField();
        LoginButton = new javax.swing.JButton();
        UsernameLabel = new javax.swing.JLabel();
        PinField = new javax.swing.JPasswordField();
        PinLabel = new javax.swing.JLabel();
        EmployeeContentPane = new javax.swing.JPanel();
        EmployeePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        EmployeeSignOutButton = new javax.swing.JButton();
        TimeButton = new javax.swing.JButton();
        OrdersButton = new javax.swing.JButton();
        TimePanel = new javax.swing.JPanel();
        TimePanelBackButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        TimeInButton = new javax.swing.JButton();
        TimeOutButton = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JSeparator();
        TimeOutTextField = new javax.swing.JTextField();
        TimeEmployeeTextField = new javax.swing.JTextField();
        TimeInTextField = new javax.swing.JTextField();
        TablesPanel = new javax.swing.JPanel();
        Table1Button = new javax.swing.JButton();
        Table2Button = new javax.swing.JButton();
        Table3Button = new javax.swing.JButton();
        Table4Button = new javax.swing.JButton();
        TableBackButton = new javax.swing.JButton();
        TableServerLabel = new javax.swing.JLabel();
        jSeparator10 = new javax.swing.JSeparator();
        OrderPanel = new javax.swing.JPanel();
        OrderBackButton = new javax.swing.JButton();
        Menu = new javax.swing.JScrollPane();
        MenuItems = new javax.swing.JTable();
        OrderAddButton = new javax.swing.JButton();
        Ordered = new javax.swing.JScrollPane();
        TableBill = new javax.swing.JTable();
        OrderRemove = new javax.swing.JButton();
        CheckoutPanel = new javax.swing.JPanel();
        AdminContentPane = new javax.swing.JPanel();
        AdminPanel = new javax.swing.JPanel();
        AdminOptionPanel = new javax.swing.JPanel();
        TextAdministratorOptions = new javax.swing.JLabel();
        ManageMenuButton = new javax.swing.JButton();
        AdminSignOutButton = new javax.swing.JButton();
        ManageUsersButton = new javax.swing.JButton();
        ManageMenuPanel = new javax.swing.JPanel();
        DoneButton1 = new javax.swing.JButton();
        TextManageMenu = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        StockTable = new javax.swing.JTable();
        RemoveMenuItemButton = new javax.swing.JButton();
        ItemPriceTextField = new javax.swing.JTextField();
        UpdateStockTextField = new javax.swing.JTextField();
        ItemQuantityTextField = new javax.swing.JTextField();
        ItemNameLabel = new javax.swing.JLabel();
        ItemPriceLabel = new javax.swing.JLabel();
        ItemQuantityLabel = new javax.swing.JLabel();
        RemoveWarningLabel = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        AddMenuItemButton = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ItemNameLabel1 = new javax.swing.JLabel();
        ItemAddTextField = new javax.swing.JTextField();
        InventorySubtractButton = new javax.swing.JButton();
        InventoryAddButton = new javax.swing.JButton();
        SelectedInventoryTextField = new javax.swing.JTextField();
        ItemNameLabel2 = new javax.swing.JLabel();
        UpdateInventoryButton = new javax.swing.JButton();
        ManageUsersPanel = new javax.swing.JPanel();
        TextManageUsers = new javax.swing.JLabel();
        ManageUsersDoneButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        RemoveUserButton = new javax.swing.JButton();
        AdminToUserButton = new javax.swing.JButton();
        AddUserButton = new javax.swing.JButton();
        UserToAdminButton = new javax.swing.JButton();
        AdminDropDown = new javax.swing.JComboBox<>();
        UserDropDown = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        firstNameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lastInitialTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        PinTextField = new javax.swing.JTextField();
        UserResponseTextField = new javax.swing.JTextField();
        AdminResponseTextField1 = new javax.swing.JTextField();
        AdminResponseTextField2 = new javax.swing.JTextField();
        UserResponseTextField4 = new javax.swing.JTextField();

        jTextField5.setText("jTextField5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 1200, 750));
        setResizable(false);
        setSize(new java.awt.Dimension(1200, 750));

        ContentPane.setBackground(new java.awt.Color(0, 102, 255));
        ContentPane.setMaximumSize(new java.awt.Dimension(1200, 800));
        ContentPane.setMinimumSize(new java.awt.Dimension(1200, 800));
        ContentPane.setPreferredSize(new java.awt.Dimension(1200, 750));
        ContentPane.setRequestFocusEnabled(false);
        ContentPane.setLayout(new java.awt.CardLayout());

        LoginPanel.setBackground(new java.awt.Color(102, 102, 102));
        LoginPanel.setBorder(new javax.swing.border.MatteBorder(null));
        LoginPanel.setMaximumSize(new java.awt.Dimension(1200, 700));
        LoginPanel.setMinimumSize(new java.awt.Dimension(1200, 700));
        LoginPanel.setPreferredSize(new java.awt.Dimension(1200, 700));

        LoginScreenExitButton.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        LoginScreenExitButton.setText("EXIT");
        LoginScreenExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginScreenExitButtonActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        UsernameTextField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        LoginButton.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        LoginButton.setText("Log In");
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonActionPerformed(evt);
            }
        });

        UsernameLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        UsernameLabel.setText("Username");

        PinField.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        PinLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        PinLabel.setText("Pin");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(PinLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(PinField, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(UsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(UsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(140, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(UsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(UsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(PinLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PinField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        javax.swing.GroupLayout LoginPanelLayout = new javax.swing.GroupLayout(LoginPanel);
        LoginPanel.setLayout(LoginPanelLayout);
        LoginPanelLayout.setHorizontalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginPanelLayout.createSequentialGroup()
                .addGap(381, 381, 381)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(272, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LoginScreenExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        LoginPanelLayout.setVerticalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginPanelLayout.createSequentialGroup()
                .addGap(209, 209, 209)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addComponent(LoginScreenExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        ContentPane.add(LoginPanel, "card3");

        EmployeeContentPane.setPreferredSize(new java.awt.Dimension(1200, 750));
        EmployeeContentPane.setLayout(new java.awt.CardLayout());

        EmployeePanel.setPreferredSize(new java.awt.Dimension(1200, 750));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setText("Employee Options");

        EmployeeSignOutButton.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        EmployeeSignOutButton.setText("Log Off");
        EmployeeSignOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmployeeSignOutButtonActionPerformed(evt);
            }
        });

        TimeButton.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        TimeButton.setText("TIME");
        TimeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimeButtonActionPerformed(evt);
            }
        });

        OrdersButton.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        OrdersButton.setText("ORDERS");
        OrdersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrdersButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EmployeePanelLayout = new javax.swing.GroupLayout(EmployeePanel);
        EmployeePanel.setLayout(EmployeePanelLayout);
        EmployeePanelLayout.setHorizontalGroup(
            EmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EmployeePanelLayout.createSequentialGroup()
                .addContainerGap(205, Short.MAX_VALUE)
                .addGroup(EmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EmployeePanelLayout.createSequentialGroup()
                        .addComponent(EmployeeSignOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EmployeePanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EmployeePanelLayout.createSequentialGroup()
                        .addComponent(TimeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(OrdersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(192, 192, 192))))
        );
        EmployeePanelLayout.setVerticalGroup(
            EmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EmployeePanelLayout.createSequentialGroup()
                .addGroup(EmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EmployeePanelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(EmployeePanelLayout.createSequentialGroup()
                        .addContainerGap(288, Short.MAX_VALUE)
                        .addGroup(EmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OrdersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TimeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(194, 194, 194)
                .addComponent(EmployeeSignOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        EmployeeContentPane.add(EmployeePanel, "card2");

        TimePanelBackButton.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        TimePanelBackButton.setText("Done");
        TimePanelBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimePanelBackButtonActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        TimeInButton.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        TimeInButton.setText("TIME IN");
        TimeInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimeInButtonActionPerformed(evt);
            }
        });

        TimeOutButton.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        TimeOutButton.setText("TIME OUT");
        TimeOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimeOutButtonActionPerformed(evt);
            }
        });

        jSeparator9.setBackground(new java.awt.Color(0, 0, 0));

        TimeOutTextField.setEditable(false);
        TimeOutTextField.setBackground(new java.awt.Color(153, 153, 153));
        TimeOutTextField.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        TimeOutTextField.setBorder(null);

        TimeEmployeeTextField.setEditable(false);
        TimeEmployeeTextField.setBackground(new java.awt.Color(153, 153, 153));
        TimeEmployeeTextField.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        TimeEmployeeTextField.setText("You are currently signed in as: ");
        TimeEmployeeTextField.setBorder(null);

        TimeInTextField.setEditable(false);
        TimeInTextField.setBackground(new java.awt.Color(153, 153, 153));
        TimeInTextField.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        TimeInTextField.setBorder(null);
        TimeInTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimeInTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(TimeInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(TimeOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
            .addComponent(jSeparator9)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TimeInTextField)
                    .addComponent(TimeOutTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(24, 24, 24)
                    .addComponent(TimeEmployeeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(286, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(137, Short.MAX_VALUE)
                .addComponent(TimeInTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(TimeOutTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TimeInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TimeOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(TimeEmployeeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(383, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout TimePanelLayout = new javax.swing.GroupLayout(TimePanel);
        TimePanel.setLayout(TimePanelLayout);
        TimePanelLayout.setHorizontalGroup(
            TimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TimePanelLayout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(282, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TimePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TimePanelBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        TimePanelLayout.setVerticalGroup(
            TimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TimePanelLayout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(137, 137, 137)
                .addComponent(TimePanelBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        EmployeeContentPane.add(TimePanel, "card3");

        TablesPanel.setBackground(new java.awt.Color(153, 153, 153));

        Table1Button.setFont(new java.awt.Font("Arial", 0, 48)); // NOI18N
        Table1Button.setText("Table 1");
        Table1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Table1ButtonActionPerformed(evt);
            }
        });

        Table2Button.setFont(new java.awt.Font("Arial", 0, 48)); // NOI18N
        Table2Button.setText("Table 2");
        Table2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Table2ButtonActionPerformed(evt);
            }
        });

        Table3Button.setFont(new java.awt.Font("Arial", 0, 48)); // NOI18N
        Table3Button.setText("Table 3");
        Table3Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Table3ButtonActionPerformed(evt);
            }
        });

        Table4Button.setFont(new java.awt.Font("Arial", 0, 48)); // NOI18N
        Table4Button.setText("Table 4");
        Table4Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Table4ButtonActionPerformed(evt);
            }
        });

        TableBackButton.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        TableBackButton.setText("Back");
        TableBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TableBackButtonActionPerformed(evt);
            }
        });

        TableServerLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        TableServerLabel.setText("Tables of Server: ");

        javax.swing.GroupLayout TablesPanelLayout = new javax.swing.GroupLayout(TablesPanel);
        TablesPanel.setLayout(TablesPanelLayout);
        TablesPanelLayout.setHorizontalGroup(
            TablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TablesPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TableBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(TablesPanelLayout.createSequentialGroup()
                .addGroup(TablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TablesPanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(TablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Table3Button, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                            .addComponent(Table1Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(31, 31, 31)
                        .addGroup(TablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Table4Button, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Table2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(TablesPanelLayout.createSequentialGroup()
                        .addGap(316, 316, 316)
                        .addComponent(TableServerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(TablesPanelLayout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(254, Short.MAX_VALUE))
        );
        TablesPanelLayout.setVerticalGroup(
            TablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TablesPanelLayout.createSequentialGroup()
                .addGroup(TablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TablesPanelLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(TablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Table1Button, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Table2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 277, Short.MAX_VALUE))
                    .addGroup(TablesPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(TablesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Table4Button, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Table3Button, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)))
                .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TableServerLabel)
                .addGap(68, 68, 68)
                .addComponent(TableBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        EmployeeContentPane.add(TablesPanel, "card4");

        OrderBackButton.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        OrderBackButton.setText("Back");
        OrderBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderBackButtonActionPerformed(evt);
            }
        });

        MenuItems.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        MenuItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MenuItems.setRowHeight(20);
        Menu.setViewportView(MenuItems);
        if (MenuItems.getColumnModel().getColumnCount() > 0) {
            MenuItems.getColumnModel().getColumn(0).setResizable(false);
        }

        OrderAddButton.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        OrderAddButton.setText("Add");
        OrderAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderAddButtonActionPerformed(evt);
            }
        });

        TableBill.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        TableBill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Current Order"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableBill.setRowHeight(20);
        Ordered.setViewportView(TableBill);
        if (TableBill.getColumnModel().getColumnCount() > 0) {
            TableBill.getColumnModel().getColumn(0).setResizable(false);
        }

        OrderRemove.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        OrderRemove.setText("Remove");
        OrderRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout OrderPanelLayout = new javax.swing.GroupLayout(OrderPanel);
        OrderPanel.setLayout(OrderPanelLayout);
        OrderPanelLayout.setHorizontalGroup(
            OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrderPanelLayout.createSequentialGroup()
                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OrderPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(Menu, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(OrderPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(OrderAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(141, 141, 141)
                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OrderPanelLayout.createSequentialGroup()
                        .addComponent(OrderRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(OrderPanelLayout.createSequentialGroup()
                        .addComponent(Ordered, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 173, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OrderPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(OrderBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        OrderPanelLayout.setVerticalGroup(
            OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrderPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Menu, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                    .addComponent(Ordered))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OrderAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OrderRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(OrderBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        EmployeeContentPane.add(OrderPanel, "card5");

        javax.swing.GroupLayout CheckoutPanelLayout = new javax.swing.GroupLayout(CheckoutPanel);
        CheckoutPanel.setLayout(CheckoutPanelLayout);
        CheckoutPanelLayout.setHorizontalGroup(
            CheckoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        CheckoutPanelLayout.setVerticalGroup(
            CheckoutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );

        EmployeeContentPane.add(CheckoutPanel, "card6");

        ContentPane.add(EmployeeContentPane, "card3");

        AdminContentPane.setMinimumSize(new java.awt.Dimension(1200, 750));
        AdminContentPane.setPreferredSize(new java.awt.Dimension(1200, 750));
        AdminContentPane.setLayout(new java.awt.CardLayout());

        AdminPanel.setBackground(new java.awt.Color(102, 102, 102));
        AdminPanel.setMaximumSize(new java.awt.Dimension(1200, 750));
        AdminPanel.setMinimumSize(new java.awt.Dimension(1200, 750));
        AdminPanel.setLayout(new java.awt.CardLayout());

        AdminOptionPanel.setBackground(new java.awt.Color(102, 102, 102));

        TextAdministratorOptions.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        TextAdministratorOptions.setForeground(new java.awt.Color(153, 153, 153));
        TextAdministratorOptions.setText("Administrator Options ");

        ManageMenuButton.setFont(new java.awt.Font("Lucida Grande", 1, 48)); // NOI18N
        ManageMenuButton.setText("MANAGE MENU");
        ManageMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManageMenuButtonActionPerformed(evt);
            }
        });

        AdminSignOutButton.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        AdminSignOutButton.setText("Sign Out");
        AdminSignOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminSignOutButtonActionPerformed(evt);
            }
        });

        ManageUsersButton.setFont(new java.awt.Font("Lucida Grande", 1, 48)); // NOI18N
        ManageUsersButton.setText("MANAGE USERS");
        ManageUsersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManageUsersButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AdminOptionPanelLayout = new javax.swing.GroupLayout(AdminOptionPanel);
        AdminOptionPanel.setLayout(AdminOptionPanelLayout);
        AdminOptionPanelLayout.setHorizontalGroup(
            AdminOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdminOptionPanelLayout.createSequentialGroup()
                .addGap(0, 802, Short.MAX_VALUE)
                .addComponent(TextAdministratorOptions)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdminOptionPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(AdminOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdminOptionPanelLayout.createSequentialGroup()
                        .addComponent(AdminSignOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdminOptionPanelLayout.createSequentialGroup()
                        .addComponent(ManageMenuButton)
                        .addGap(184, 184, 184))))
            .addGroup(AdminOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(AdminOptionPanelLayout.createSequentialGroup()
                    .addGap(123, 123, 123)
                    .addComponent(ManageUsersButton)
                    .addContainerGap(650, Short.MAX_VALUE)))
        );
        AdminOptionPanelLayout.setVerticalGroup(
            AdminOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdminOptionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TextAdministratorOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 199, Short.MAX_VALUE)
                .addComponent(ManageMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(182, 182, 182)
                .addComponent(AdminSignOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addGroup(AdminOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(AdminOptionPanelLayout.createSequentialGroup()
                    .addGap(264, 264, 264)
                    .addComponent(ManageUsersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(268, Short.MAX_VALUE)))
        );

        AdminPanel.add(AdminOptionPanel, "card2");

        ManageMenuPanel.setBackground(new java.awt.Color(102, 102, 102));

        DoneButton1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        DoneButton1.setText("Done");
        DoneButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoneButton1ActionPerformed(evt);
            }
        });

        TextManageMenu.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        TextManageMenu.setForeground(new java.awt.Color(153, 153, 153));
        TextManageMenu.setText("Manage Menu");

        StockTable.setBackground(new java.awt.Color(204, 204, 204));
        StockTable.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        StockTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Price/Unit", "              Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        StockTable.setGridColor(new java.awt.Color(204, 204, 204));
        StockTable.setSelectionBackground(new java.awt.Color(102, 102, 102));
        StockTable.setSelectionForeground(new java.awt.Color(153, 153, 153));
        StockTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        StockTable.setShowGrid(false);
        StockTable.getTableHeader().setReorderingAllowed(false);
        StockTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StockTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(StockTable);
        StockTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (StockTable.getColumnModel().getColumnCount() > 0) {
            StockTable.getColumnModel().getColumn(0).setResizable(false);
            StockTable.getColumnModel().getColumn(1).setResizable(false);
            StockTable.getColumnModel().getColumn(2).setResizable(false);
        }

        RemoveMenuItemButton.setText("Remove");
        RemoveMenuItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveMenuItemButtonActionPerformed(evt);
            }
        });

        ItemPriceTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemPriceTextFieldActionPerformed(evt);
            }
        });

        UpdateStockTextField.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        UpdateStockTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        UpdateStockTextField.setBorder(null);
        UpdateStockTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateStockTextFieldActionPerformed(evt);
            }
        });

        ItemQuantityTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemQuantityTextFieldActionPerformed(evt);
            }
        });

        ItemNameLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ItemNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        ItemNameLabel.setText("Item Name:");

        ItemPriceLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ItemPriceLabel.setForeground(new java.awt.Color(255, 255, 255));
        ItemPriceLabel.setText("Price/Unit:");

        ItemQuantityLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ItemQuantityLabel.setForeground(new java.awt.Color(255, 255, 255));
        ItemQuantityLabel.setText("Quantity:");

        RemoveWarningLabel.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        RemoveWarningLabel.setText("Warning! The selected item will be removed.");

        AddMenuItemButton.setText("Add");
        AddMenuItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddMenuItemButtonActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("UPDATE INVENTORY");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("ADD NEW ITEM");

        ItemNameLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ItemNameLabel1.setForeground(new java.awt.Color(255, 255, 255));
        ItemNameLabel1.setText("Selected Item: ");

        InventorySubtractButton.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        InventorySubtractButton.setText("-");
        InventorySubtractButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InventorySubtractButtonActionPerformed(evt);
            }
        });

        InventoryAddButton.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        InventoryAddButton.setText("+");
        InventoryAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InventoryAddButtonActionPerformed(evt);
            }
        });

        SelectedInventoryTextField.setEditable(false);
        SelectedInventoryTextField.setBackground(new java.awt.Color(204, 204, 204));
        SelectedInventoryTextField.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        SelectedInventoryTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SelectedInventoryTextField.setBorder(null);

        ItemNameLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ItemNameLabel2.setForeground(new java.awt.Color(255, 255, 255));
        ItemNameLabel2.setText("Stock:");

        UpdateInventoryButton.setText("Update");
        UpdateInventoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateInventoryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ManageMenuPanelLayout = new javax.swing.GroupLayout(ManageMenuPanel);
        ManageMenuPanel.setLayout(ManageMenuPanelLayout);
        ManageMenuPanelLayout.setHorizontalGroup(
            ManageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManageMenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ManageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator6)
                    .addGroup(ManageMenuPanelLayout.createSequentialGroup()
                        .addComponent(TextManageMenu)
                        .addGap(0, 950, Short.MAX_VALUE))
                    .addComponent(jSeparator5)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManageMenuPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(DoneButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ManageMenuPanelLayout.createSequentialGroup()
                        .addGroup(ManageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ManageMenuPanelLayout.createSequentialGroup()
                                .addComponent(RemoveWarningLabel)
                                .addGap(18, 18, 18)
                                .addComponent(RemoveMenuItemButton))
                            .addGroup(ManageMenuPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 776, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(ManageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ManageMenuPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(ManageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(ManageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(AddMenuItemButton)
                                        .addGroup(ManageMenuPanelLayout.createSequentialGroup()
                                            .addGroup(ManageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(ItemNameLabel)
                                                .addComponent(ItemPriceLabel))
                                            .addGroup(ManageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(ManageMenuPanelLayout.createSequentialGroup()
                                                    .addGap(13, 13, 13)
                                                    .addComponent(ItemPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(ItemQuantityLabel)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(ItemQuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(ManageMenuPanelLayout.createSequentialGroup()
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(ItemAddTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManageMenuPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(53, 53, 53))
                                    .addGroup(ManageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(UpdateInventoryButton)
                                        .addGroup(ManageMenuPanelLayout.createSequentialGroup()
                                            .addGroup(ManageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(ItemNameLabel1)
                                                .addComponent(ItemNameLabel2))
                                            .addGap(18, 18, 18)
                                            .addGroup(ManageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(SelectedInventoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(UpdateStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(ManageMenuPanelLayout.createSequentialGroup()
                                .addGap(129, 129, 129)
                                .addComponent(InventorySubtractButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(InventoryAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addGroup(ManageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManageMenuPanelLayout.createSequentialGroup()
                    .addContainerGap(919, Short.MAX_VALUE)
                    .addComponent(jLabel7)
                    .addGap(102, 102, 102)))
        );
        ManageMenuPanelLayout.setVerticalGroup(
            ManageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManageMenuPanelLayout.createSequentialGroup()
                .addComponent(TextManageMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ManageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ManageMenuPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ManageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RemoveMenuItemButton)
                            .addComponent(RemoveWarningLabel)
                            .addComponent(UpdateInventoryButton))
                        .addGap(32, 32, 32))
                    .addGroup(ManageMenuPanelLayout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addGroup(ManageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ItemNameLabel)
                            .addComponent(ItemAddTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ManageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ItemPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ItemQuantityLabel)
                            .addComponent(ItemPriceLabel)
                            .addComponent(ItemQuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AddMenuItemButton)
                        .addGap(71, 71, 71)
                        .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addGroup(ManageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SelectedInventoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ItemNameLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(ManageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UpdateStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ItemNameLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ManageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InventorySubtractButton)
                            .addComponent(InventoryAddButton))
                        .addGap(78, 78, 78)))
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DoneButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addGroup(ManageMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ManageMenuPanelLayout.createSequentialGroup()
                    .addGap(94, 94, 94)
                    .addComponent(jLabel7)
                    .addContainerGap(628, Short.MAX_VALUE)))
        );

        AdminPanel.add(ManageMenuPanel, "card3");

        ManageUsersPanel.setBackground(new java.awt.Color(102, 102, 102));

        TextManageUsers.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        TextManageUsers.setForeground(new java.awt.Color(153, 153, 153));
        TextManageUsers.setText("Manage Users");

        ManageUsersDoneButton.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        ManageUsersDoneButton.setText("Done");
        ManageUsersDoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManageUsersDoneButtonActionPerformed(evt);
            }
        });

        RemoveUserButton.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        RemoveUserButton.setText("Remove User");
        RemoveUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveUserButtonActionPerformed(evt);
            }
        });

        AdminToUserButton.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        AdminToUserButton.setText("Change Privilege (Admin -> User)");
        AdminToUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminToUserButtonActionPerformed(evt);
            }
        });

        AddUserButton.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        AddUserButton.setText("Add User");
        AddUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddUserButtonActionPerformed(evt);
            }
        });

        UserToAdminButton.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        UserToAdminButton.setText("Change Privilege (User -> Admin)");
        UserToAdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserToAdminButtonActionPerformed(evt);
            }
        });

        AdminDropDown.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        AdminDropDown.setMaximumRowCount(100);
        AdminDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrator Accounts:" }));
        AdminDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminDropDownActionPerformed(evt);
            }
        });

        UserDropDown.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        UserDropDown.setMaximumRowCount(100);
        UserDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "User Accounts:" }));
        UserDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserDropDownActionPerformed(evt);
            }
        });

        jTextField1.setBackground(new java.awt.Color(102, 102, 102));
        jTextField1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setText("Administrator account to be changed:");
        jTextField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        jTextField2.setBackground(new java.awt.Color(102, 102, 102));
        jTextField2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2.setText("User account to be changed:");
        jTextField2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        firstNameTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("First name:");

        jTextField4.setBackground(new java.awt.Color(102, 102, 102));
        jTextField4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField4.setForeground(new java.awt.Color(255, 255, 255));
        jTextField4.setText("User account to be added:");
        jTextField4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Last name initial:");

        lastInitialTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Pin: ");

        PinTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        UserResponseTextField.setBackground(new java.awt.Color(102, 102, 102));
        UserResponseTextField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        UserResponseTextField.setForeground(new java.awt.Color(255, 255, 255));
        UserResponseTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        UserResponseTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserResponseTextFieldActionPerformed(evt);
            }
        });

        AdminResponseTextField1.setBackground(new java.awt.Color(102, 102, 102));
        AdminResponseTextField1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        AdminResponseTextField1.setForeground(new java.awt.Color(255, 0, 51));
        AdminResponseTextField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        AdminResponseTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminResponseTextField1ActionPerformed(evt);
            }
        });

        AdminResponseTextField2.setBackground(new java.awt.Color(102, 102, 102));
        AdminResponseTextField2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        AdminResponseTextField2.setForeground(new java.awt.Color(255, 255, 255));
        AdminResponseTextField2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        AdminResponseTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminResponseTextField2ActionPerformed(evt);
            }
        });

        UserResponseTextField4.setBackground(new java.awt.Color(102, 102, 102));
        UserResponseTextField4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        UserResponseTextField4.setForeground(new java.awt.Color(255, 0, 51));
        UserResponseTextField4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        UserResponseTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserResponseTextField4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ManageUsersPanelLayout = new javax.swing.GroupLayout(ManageUsersPanel);
        ManageUsersPanel.setLayout(ManageUsersPanelLayout);
        ManageUsersPanelLayout.setHorizontalGroup(
            ManageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator3)
            .addGroup(ManageUsersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TextManageUsers)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(ManageUsersPanelLayout.createSequentialGroup()
                .addGroup(ManageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ManageUsersPanelLayout.createSequentialGroup()
                        .addGroup(ManageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManageUsersPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ManageUsersPanelLayout.createSequentialGroup()
                                .addGroup(ManageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(ManageUsersPanelLayout.createSequentialGroup()
                                        .addGap(141, 141, 141)
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(ManageUsersPanelLayout.createSequentialGroup()
                                        .addGap(132, 132, 132)
                                        .addComponent(UserDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(ManageUsersPanelLayout.createSequentialGroup()
                                        .addGap(140, 140, 140)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(ManageUsersPanelLayout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(RemoveUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(UserToAdminButton, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(ManageUsersPanelLayout.createSequentialGroup()
                                        .addGap(95, 95, 95)
                                        .addGroup(ManageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManageUsersPanelLayout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(18, 18, 18)
                                                .addComponent(lastInitialTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel4)
                                                .addGap(18, 18, 18)
                                                .addComponent(PinTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManageUsersPanelLayout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(18, 18, 18)
                                                .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(ManageUsersPanelLayout.createSequentialGroup()
                                        .addGap(162, 162, 162)
                                        .addComponent(UserResponseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(ManageUsersPanelLayout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(AddUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManageUsersPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(UserResponseTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)))
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(ManageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ManageUsersPanelLayout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addGroup(ManageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AdminDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ManageUsersPanelLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(AdminResponseTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ManageUsersPanelLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(AdminResponseTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ManageUsersPanelLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(AdminToUserButton)))
                .addGap(58, 58, 58))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManageUsersPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ManageUsersDoneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        ManageUsersPanelLayout.setVerticalGroup(
            ManageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManageUsersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TextManageUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ManageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ManageUsersPanelLayout.createSequentialGroup()
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(ManageUsersPanelLayout.createSequentialGroup()
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UserDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(ManageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ManageUsersPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(ManageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(RemoveUserButton)
                                    .addComponent(UserToAdminButton))
                                .addGap(44, 44, 44)
                                .addComponent(UserResponseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(UserResponseTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(ManageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(ManageUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lastInitialTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(PinTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(27, 27, 27)
                                .addComponent(AddUserButton)
                                .addGap(74, 74, 74))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManageUsersPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(AdminResponseTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AdminDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(AdminToUserButton)
                                .addGap(61, 61, 61)
                                .addComponent(AdminResponseTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(144, 144, 144)))))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ManageUsersDoneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        AdminPanel.add(ManageUsersPanel, "card3");

        AdminContentPane.add(AdminPanel, "card2");

        ContentPane.add(AdminContentPane, "card4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ContentPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1200, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ContentPane, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButtonActionPerformed
        try {

            Login login = new Login();
            String pin = new String(PinField.getPassword());
            try {
                emp = login.signIn(UsernameTextField.getText(), pin);
                //checking to see if employee is already in system if not adding them in
                if (employees.get(emp.empName) != null) {
                    emp = employees.get(emp.empName);
                    System.out.println("found");
                } else {
                    employees.put(emp.empName, emp);
                }
            } catch (NullPointerException e) {
            }
            if (emp != null) {
                if (emp.admin == false) {
                    //logged in as authorized user
                    LoginPanel.setVisible(false);
                    AdminContentPane.setVisible(false);
                    EmployeeContentPane.setVisible(true);
                    System.out.println(emp);
                    System.out.println(emp.empName);

                } else {
                    LoginPanel.setVisible(false);
                    EmployeeContentPane.setVisible(false);
                    AdminContentPane.setVisible(true);

                }
            } else if (emp == null) {
                String message = "You have entered an incorrect login. Please try again. (Note: Login is case sensitive)";
                JOptionPane.showMessageDialog(null, message);
                UsernameTextField.setText("");
                PinField.setText("");
            }
        } catch (IOException ex) {
            System.out.println("IO Exception.");
        }
    }//GEN-LAST:event_LoginButtonActionPerformed

    private void LoginScreenExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginScreenExitButtonActionPerformed
        try {
            PrintWriter out = new PrintWriter("menu.txt");

            for (String key : menu.keySet()) {

                String itemName = menu.get(key).getName();
                Double price = menu.get(key).getPrice();
                int quantity = menu.get(key).getInventory();
                out.print("\n" + itemName + "/" + price + "/" + quantity);
            }
            System.out.println("Menu has been stored in file.");
            out.close();
            System.exit(0);

        } catch (FileNotFoundException ex) {
            System.out.println("File not found.");
        }
    }//GEN-LAST:event_LoginScreenExitButtonActionPerformed

    private void EmployeeSignOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmployeeSignOutButtonActionPerformed
        if (TimeInTextField.getText().equals("") && TimeOutTextField.getText().equals("")) {
            LoginPanel.setVisible(true);
            AdminContentPane.setVisible(false);
            EmployeeContentPane.setVisible(false);
            TimeInTextField.setText("");
            TimeOutTextField.setText("");
            UsernameTextField.setText("");
            PinField.setText("");

        } else if (TimeOutTextField.getText().equals("")) {
            String message = "There is no recorded time out.";
            JOptionPane.showMessageDialog(null, message);
        } else {
            LoginPanel.setVisible(true);
            AdminContentPane.setVisible(false);
            EmployeeContentPane.setVisible(false);
            TimeInTextField.setText("");
            TimeOutTextField.setText("");
            UsernameTextField.setText("");
            PinField.setText("");
        }
    }//GEN-LAST:event_EmployeeSignOutButtonActionPerformed

    private void AdminSignOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminSignOutButtonActionPerformed
        LoginPanel.setVisible(true);
        AdminContentPane.setVisible(false);
        EmployeeContentPane.setVisible(false);

        UsernameTextField.setText("");
        PinField.setText("");
    }//GEN-LAST:event_AdminSignOutButtonActionPerformed

    private void ManageUsersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManageUsersButtonActionPerformed
        AdminOptionPanel.setVisible(false);
        ManageUsersPanel.setVisible(true);

        firstNameTextField.setText("");
        lastInitialTextField.setText("");
        PinTextField.setText("");
        AdminResponseTextField1.setText("");
        AdminResponseTextField2.setText("");
        Administrator admin = new Administrator();
        try {
            ArrayList userLogins = admin.printUserLogins();
            for (int i = 0; i < userLogins.size(); i++) {
                UserDropDown.addItem(userLogins.get(i).toString());
            }
            ArrayList adminLogins = admin.printAdminLogins();
            for (int i = 0; i < adminLogins.size(); i++) {
                AdminDropDown.addItem(adminLogins.get(i).toString());
            }
        } catch (FileNotFoundException ex) {
            System.out.println("file not found.");
        }
    }//GEN-LAST:event_ManageUsersButtonActionPerformed

    private void ManageMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManageMenuButtonActionPerformed
        AdminOptionPanel.setVisible(false);
        ManageMenuPanel.setVisible((true));
        SelectedInventoryTextField.setText("");
        UpdateStockTextField.setText("");
        RemoveWarningLabel.setText("Warning! The selected item will be removed!");
        DecimalFormat df = new DecimalFormat(".00");

        stockTable = (DefaultTableModel) StockTable.getModel();

        if (stockTable.getRowCount() == 0) {
            for (int i = 0; i < menuItems.size(); i++) {

                stockTable.addRow(new Object[]{menuItems.get(i), df.format(menu.get(menuItems.get(i)).getPrice()), menu.get(menuItems.get(i)).getInventory()});
            }
        }

    }//GEN-LAST:event_ManageMenuButtonActionPerformed

    private void ManageUsersDoneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManageUsersDoneButtonActionPerformed
        ManageUsersPanel.setVisible(false);
        AdminOptionPanel.setVisible(true);

        UserDropDown.removeAllItems();
        AdminDropDown.removeAllItems();
        UserDropDown.addItem("User Accounts:");
        AdminDropDown.addItem("Administrator Accounts:");
        UserResponseTextField.setText("");
    }//GEN-LAST:event_ManageUsersDoneButtonActionPerformed

    private void AdminDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminDropDownActionPerformed

    }//GEN-LAST:event_AdminDropDownActionPerformed

    private void UserDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserDropDownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UserDropDownActionPerformed

    private void RemoveUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveUserButtonActionPerformed
        try {
            Administrator admin = new Administrator();

            if (UserDropDown.getSelectedIndex() != 0) {
                String account = UserDropDown.getSelectedItem().toString();
                String[] arr = account.split(" ");
                String firstname = arr[0];
                String lastinitial = arr[1].substring(0, 1);
                String username = firstname + " " + lastinitial;
                String pin = arr[1].substring(1);
                //System.out.println(pin);
                admin.deleteUser(username, pin);

                ManageUsersDoneButtonActionPerformed(null);
                ManageUsersButtonActionPerformed(null);

                UserResponseTextField.setText(firstname + " " + lastinitial + " has been removed. ");
            } else if (UserDropDown.getSelectedIndex() == 0) {
                ManageUsersDoneButtonActionPerformed(null);
                ManageUsersButtonActionPerformed(null);
                UserResponseTextField.setText("You have not selected an account.");
            }
        } catch (IOException ex) {
            System.out.println("IO Exception.");
        }
    }//GEN-LAST:event_RemoveUserButtonActionPerformed

    private void UserResponseTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserResponseTextFieldActionPerformed
        // TODO add your handling code:
    }//GEN-LAST:event_UserResponseTextFieldActionPerformed

    private void AddUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddUserButtonActionPerformed
        Administrator admin = new Administrator();

        if (!firstNameTextField.getText().equals("") && !lastInitialTextField.getText().equals("") && !PinTextField.getText().equals("")) {
            try {
                String firstName = firstNameTextField.getText();
                String lastInitial = lastInitialTextField.getText();
                String pin = PinTextField.getText();

                String username = firstName + " " + lastInitial;
                admin.addUser(username, pin);

                ManageUsersDoneButtonActionPerformed(null);
                ManageUsersButtonActionPerformed(null);
                firstNameTextField.setText("");
                lastInitialTextField.setText("");
                PinTextField.setText("");

                UserResponseTextField.setText(firstName + " " + lastInitial + " has been added. ");

            } catch (IOException ex) {
                System.out.println("IO Exception.");
            }
        } else {
            ManageUsersDoneButtonActionPerformed(null);
            ManageUsersButtonActionPerformed(null);
            UserResponseTextField4.setText("You have not filled out all required fields.");
        }
    }//GEN-LAST:event_AddUserButtonActionPerformed

    private void AdminResponseTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminResponseTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AdminResponseTextField1ActionPerformed

    private void UserToAdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserToAdminButtonActionPerformed
        Administrator admin = new Administrator();

        if (UserDropDown.getSelectedIndex() != 0) {
            try {
                String account = UserDropDown.getSelectedItem().toString();
                String[] arr = account.split(" ");
                String firstname = arr[0];
                String lastinitial = arr[1].substring(0, 1);
                String username = firstname + " " + lastinitial;
                String pin = arr[1].substring(1);
                admin.changePrivilegeFromUserToAdmin(username, pin);

                ManageUsersDoneButtonActionPerformed(null);
                ManageUsersButtonActionPerformed(null);

                UserResponseTextField.setText(firstname + " " + lastinitial + " has been changed to an Administrator. ");
            } catch (IOException ex) {
                System.out.println("IO Exception.");
            }
        } else if (UserDropDown.getSelectedIndex() == 0) {
            ManageUsersDoneButtonActionPerformed(null);
            ManageUsersButtonActionPerformed(null);
            UserResponseTextField.setText("You have not selected an account.");
        }
    }//GEN-LAST:event_UserToAdminButtonActionPerformed

    private void AdminToUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminToUserButtonActionPerformed
        Administrator admin = new Administrator();

        if (AdminDropDown.getSelectedIndex() != 0) {
            try {
                String account = AdminDropDown.getSelectedItem().toString();
                String[] arr = account.split(" ");
                String firstname = arr[0];
                String lastinitial = arr[1].substring(0, 1);
                String username = firstname + " " + lastinitial;
                String pin = arr[1].substring(1);
                admin.changePrivilegeFromAdminToUser(username, pin);

                ManageUsersDoneButtonActionPerformed(null);
                ManageUsersButtonActionPerformed(null);

                AdminResponseTextField2.setText(firstname + " " + lastinitial + " has been changed to an authorized user. ");
            } catch (IOException ex) {
                System.out.println("IO Exception.");
            }
        } else if (UserDropDown.getSelectedIndex() == 0) {
            ManageUsersDoneButtonActionPerformed(null);
            ManageUsersButtonActionPerformed(null);
            AdminResponseTextField1.setText("You have not selected an account.");
        }
    }//GEN-LAST:event_AdminToUserButtonActionPerformed

    private void AdminResponseTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminResponseTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AdminResponseTextField2ActionPerformed

    private void UserResponseTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserResponseTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UserResponseTextField4ActionPerformed

    private void ItemQuantityTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemQuantityTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemQuantityTextFieldActionPerformed

    private void ItemPriceTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemPriceTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemPriceTextFieldActionPerformed

    private void DoneButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoneButton1ActionPerformed
        ManageMenuPanel.setVisible(false);
        AdminOptionPanel.setVisible(true);
    }//GEN-LAST:event_DoneButton1ActionPerformed

    private void RemoveMenuItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveMenuItemButtonActionPerformed
        Administrator admin = new Administrator();
        if (StockTable.getSelectedRow() != -1) {
            StockTable.getSelectedRow();
            String itemToRemove = stockTable.getValueAt(StockTable.getSelectedRow(), 0).toString();
            stockTable.removeRow(StockTable.getSelectedRow());
            SelectedInventoryTextField.setText("");
            UpdateStockTextField.setText("");
            menuItems.remove(itemToRemove);
            admin.deleteFromMenu(itemToRemove);

        } else {

            RemoveWarningLabel.setText("You have not selected a row to remove!");

        }


    }//GEN-LAST:event_RemoveMenuItemButtonActionPerformed

    private void UpdateStockTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateStockTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UpdateStockTextFieldActionPerformed

    private void StockTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StockTableMouseClicked
        int selectedRow = StockTable.getSelectedRow();
        String selectedItem = StockTable.getValueAt(selectedRow, 0).toString();
        int inventory = menu.get(selectedItem).getInventory();
        String inventory2 = Integer.toString(inventory);
        UpdateStockTextField.setText(inventory2);
        SelectedInventoryTextField.setText(selectedItem);
    }//GEN-LAST:event_StockTableMouseClicked

    private void AddMenuItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddMenuItemButtonActionPerformed

        Administrator admin = new Administrator();

        if (!ItemAddTextField.getText().equals("") && !ItemPriceTextField.getText().equals("") && !ItemQuantityTextField.getText().equals("")) {
            String itemToAdd = ItemAddTextField.getText();
            String priceToAdd = ItemPriceTextField.getText();
            String quantityToAdd = ItemQuantityTextField.getText();
            Double price = Double.parseDouble(priceToAdd);
            Integer quantity = Integer.parseInt(quantityToAdd);

            stockTable.addRow(new Object[]{itemToAdd, priceToAdd, quantityToAdd});
            menuItems.add(itemToAdd);
            admin.addToMenu(itemToAdd, price, quantity);

            ItemAddTextField.setText("");
            ItemPriceTextField.setText("");
            ItemQuantityTextField.setText("");
            // System.out.println("item added: " + itemToAdd + " " + price + " " + quantity);
        }
    }//GEN-LAST:event_AddMenuItemButtonActionPerformed

    private void UpdateInventoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateInventoryButtonActionPerformed

        if (!SelectedInventoryTextField.getText().equals("") && !UpdateStockTextField.getText().equals("")) {
            String selectedItem = SelectedInventoryTextField.getText();
            String stock = UpdateStockTextField.getText();
            int stock2 = Integer.parseInt(stock);
            int quantity = menu.get(selectedItem).getInventory();

            int quantityUpdate = stock2 - quantity;
            System.out.println("Quantity Update: " + quantityUpdate);
            menu.get(selectedItem).setInventory(quantityUpdate);
            System.out.println(menu.get(selectedItem).getInventory());

            int storedInventory = menu.get(StockTable.getValueAt(StockTable.getSelectedRow(), 0)).getInventory();
            String inventory = Integer.toString(storedInventory);
            StockTable.setValueAt(inventory, StockTable.getSelectedRow(), 2);
        }
    }//GEN-LAST:event_UpdateInventoryButtonActionPerformed

    private void InventoryAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InventoryAddButtonActionPerformed

        String stock = UpdateStockTextField.getText();
        int stock2 = Integer.parseInt(stock);
        stock2++;
        String stock3 = Integer.toString(stock2);
        UpdateStockTextField.setText(stock3);

    }//GEN-LAST:event_InventoryAddButtonActionPerformed

    private void InventorySubtractButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InventorySubtractButtonActionPerformed
        String stock = UpdateStockTextField.getText();
        int stock2 = Integer.parseInt(stock);
        stock2--;
        String stock3 = Integer.toString(stock2);
        UpdateStockTextField.setText(stock3);
    }//GEN-LAST:event_InventorySubtractButtonActionPerformed

    private void TimeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimeButtonActionPerformed
        TimePanel.setVisible(true);
        EmployeePanel.setVisible(false);
        TimeEmployeeTextField.setText("You are currently logged in as: " + emp.empName);
    }//GEN-LAST:event_TimeButtonActionPerformed

    private void TimePanelBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimePanelBackButtonActionPerformed
        TimePanel.setVisible(false);
        EmployeePanel.setVisible(true);
    }//GEN-LAST:event_TimePanelBackButtonActionPerformed

    private void TimeInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimeInButtonActionPerformed
        if (!TimeInTextField.getText().equals("")) {
            String message = "There is no recorded time out!";
            JOptionPane.showMessageDialog(null, message);
        }
        TimeOutTextField.setText("");

        emp.setSignIn();
        employees.replace(emp.empName, emp);

        String signInTime = emp.returnSignIn();
        String date = signInTime.substring(0, 10);
        String time = signInTime.substring(11);
        TimeInTextField.setText("Sign In:      Date: " + date + "        Time: " + time);
        String signIn = "Sign In";
        try {
            emp.writeTimeToFile(emp, signIn, signInTime);
        } catch (FileNotFoundException ex) {
            System.out.println("File not found.");
        } catch (IOException ex) {
            System.out.println("IO exception.");;
        }
        TimePanel.setVisible(false);
        EmployeePanel.setVisible(true);

    }//GEN-LAST:event_TimeInButtonActionPerformed

    private void TimeOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimeOutButtonActionPerformed
        if (TimeInTextField.getText().equals("Sign In time:")) {
            System.out.println("No sign in found.");
        } else if (TimeInTextField.getText().equals("")) {
            System.out.println("No sign in found");
        } else {
            emp.setSignOut();
            employees.replace(emp.empName, emp);

            String signOutTime = emp.returnSignOut();
            String date = signOutTime.substring(0, 10);
            String time = signOutTime.substring(11);
            TimeOutTextField.setText("Sign Out:      Date: " + date + "       Time: " + time);
            String signOut = "Sign Out";
            try {
                emp.writeTimeToFile(emp, signOut, signOutTime);
            } catch (FileNotFoundException ex) {
                System.out.println("File not found.");
            } catch (IOException ex) {
                System.out.println("IO exception");
            }
            TimePanel.setVisible(false);
            EmployeePanel.setVisible(true);

        }
    }//GEN-LAST:event_TimeOutButtonActionPerformed

    private void OrdersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrdersButtonActionPerformed
        if (TimeInTextField.getText().equals("")) {
            String message = "There is no recorded time in!";
            JOptionPane.showMessageDialog(null, message);
        } else if (!TimeInTextField.getText().equals("") && !TimeOutTextField.getText().equals("")) {
            String message = "A new time in is required to proceed!";
            JOptionPane.showMessageDialog(null, message);
        } else {
            TablesPanel.setVisible(true);
            EmployeePanel.setVisible(false);
            TableServerLabel.setText("Tables of Server: " + emp.empName);
        }
    }//GEN-LAST:event_OrdersButtonActionPerformed

    private void TableBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TableBackButtonActionPerformed
        TablesPanel.setVisible(false);
        EmployeePanel.setVisible(true);
    }//GEN-LAST:event_TableBackButtonActionPerformed

    private void OrderBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderBackButtonActionPerformed
        OrderPanel.setVisible(false);
        TablesPanel.setVisible(true);

    }//GEN-LAST:event_OrderBackButtonActionPerformed

    private void Table1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Table1ButtonActionPerformed

        table = emp.tables[0];
        OrderPanel.setVisible(true);
        TablesPanel.setVisible(false);
        menuTable = (DefaultTableModel) MenuItems.getModel();
        menuTable.isCellEditable(ERROR, NORMAL);
        if (menuTable.getRowCount() > 0) {
            for (int i = menuTable.getRowCount() - 1; i > -1; i--) {
                menuTable.removeRow(i);
            }
        }
        for (int i = 0; i < menuItems.size(); i++) {

            menuTable.addRow(new Object[]{menuItems.get(i)});
        }
        tableBill = (DefaultTableModel) TableBill.getModel();

        tableBill.isCellEditable(ERROR, NORMAL);
        if (tableBill.getRowCount() > 0) {
            for (int i = tableBill.getRowCount() - 1; i > -1; i--) {
                tableBill.removeRow(i);
            }
        }
        for (int i = 0; i < table.returnOrder().size(); i++) {

            tableBill.addRow(new Object[]{table.returnOrder().get(i)});
        }

    }//GEN-LAST:event_Table1ButtonActionPerformed

    private void Table2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Table2ButtonActionPerformed
        table = emp.tables[1];
        OrderPanel.setVisible(true);
        TablesPanel.setVisible(false);
        menuTable = (DefaultTableModel) MenuItems.getModel();
        menuTable.isCellEditable(ERROR, NORMAL);
        if (menuTable.getRowCount() > 0) {
            for (int i = menuTable.getRowCount() - 1; i > -1; i--) {
                menuTable.removeRow(i);
            }
        }
        for (int i = 0; i < menuItems.size(); i++) {

            menuTable.addRow(new Object[]{menuItems.get(i)});
        }
        tableBill = (DefaultTableModel) TableBill.getModel();

        tableBill.isCellEditable(ERROR, NORMAL);
        if (tableBill.getRowCount() > 0) {
            for (int i = tableBill.getRowCount() - 1; i > -1; i--) {
                tableBill.removeRow(i);
            }
        }
        for (int i = 0; i < table.returnOrder().size(); i++) {

            tableBill.addRow(new Object[]{table.returnOrder().get(i)});
        }

    }//GEN-LAST:event_Table2ButtonActionPerformed

    private void Table3ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Table3ButtonActionPerformed
        table = emp.tables[2];
        OrderPanel.setVisible(true);
        TablesPanel.setVisible(false);
        menuTable = (DefaultTableModel) MenuItems.getModel();
        menuTable.isCellEditable(ERROR, NORMAL);
        if (menuTable.getRowCount() > 0) {
            for (int i = menuTable.getRowCount() - 1; i > -1; i--) {
                menuTable.removeRow(i);
            }
        }
        for (int i = 0; i < menuItems.size(); i++) {

            menuTable.addRow(new Object[]{menuItems.get(i)});
        }
        tableBill = (DefaultTableModel) TableBill.getModel();

        tableBill.isCellEditable(ERROR, NORMAL);
        if (tableBill.getRowCount() > 0) {
            for (int i = tableBill.getRowCount() - 1; i > -1; i--) {
                tableBill.removeRow(i);
            }
        }
        for (int i = 0; i < table.returnOrder().size(); i++) {

            tableBill.addRow(new Object[]{table.returnOrder().get(i)});
        }

    }//GEN-LAST:event_Table3ButtonActionPerformed

    private void Table4ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Table4ButtonActionPerformed
        table = emp.tables[3];
        OrderPanel.setVisible(true);
        TablesPanel.setVisible(false);
        menuTable = (DefaultTableModel) MenuItems.getModel();
        menuTable.isCellEditable(ERROR, NORMAL);
        if (menuTable.getRowCount() > 0) {
            for (int i = menuTable.getRowCount() - 1; i > -1; i--) {
                menuTable.removeRow(i);
            }
        }
        for (int i = 0; i < menuItems.size(); i++) {

            menuTable.addRow(new Object[]{menuItems.get(i)});
        }
        tableBill = (DefaultTableModel) TableBill.getModel();

        tableBill.isCellEditable(ERROR, NORMAL);
        if (tableBill.getRowCount() > 0) {
            for (int i = tableBill.getRowCount() - 1; i > -1; i--) {
                tableBill.removeRow(i);
            }
        }
        for (int i = 0; i < table.returnOrder().size(); i++) {

            tableBill.addRow(new Object[]{table.returnOrder().get(i)});
        }

    }//GEN-LAST:event_Table4ButtonActionPerformed

    private void OrderAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderAddButtonActionPerformed
        if (MenuItems.getSelectedRow() != -1) {
            if (menu.get(menuTable.getValueAt(MenuItems.getSelectedRow(), MenuItems.getSelectedColumn()).toString()).getInventory() > 0) {
                menu.get(menuTable.getValueAt(MenuItems.getSelectedRow(), MenuItems.getSelectedColumn()).toString()).setInventory(-1);
                table.addToOrder(menuTable.getValueAt(MenuItems.getSelectedRow(), MenuItems.getSelectedColumn()).toString());
                tableBill = (DefaultTableModel) TableBill.getModel();
                tableBill.isCellEditable(ERROR, NORMAL);
                if (tableBill.getRowCount() > 0) {
                    for (int i = tableBill.getRowCount() - 1; i > -1; i--) {
                        tableBill.removeRow(i);
                    }
                }
                for (int i = 0; i < table.returnOrder().size(); i++) {

                    tableBill.addRow(new Object[]{table.returnOrder().get(i)});
                }
            }
        }
        //System.out.println(menuTable.getValueAt(MenuItems.getSelectedRow(),MenuItems.getSelectedColumn()).toString());
    }//GEN-LAST:event_OrderAddButtonActionPerformed

    private void OrderRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderRemoveActionPerformed
        if (TableBill.getSelectedRow() != -1) {

            menu.get(tableBill.getValueAt(TableBill.getSelectedRow(), TableBill.getSelectedColumn()).toString()).setInventory(1);
            table.removeFromOrder(tableBill.getValueAt(TableBill.getSelectedRow(), TableBill.getSelectedColumn()).toString());

            tableBill = (DefaultTableModel) TableBill.getModel();
            tableBill.isCellEditable(ERROR, NORMAL);

            if (tableBill.getRowCount() > 0) {
                for (int i = tableBill.getRowCount() - 1; i > -1; i--) {
                    tableBill.removeRow(i);
                }
            }

            for (int i = 0; i < table.returnOrder().size(); i++) {

                tableBill.addRow(new Object[]{table.returnOrder().get(i)});
            }
        }
    }//GEN-LAST:event_OrderRemoveActionPerformed

    private void TimeInTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimeInTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TimeInTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws IOException, InterruptedException {
        menu = new HashMap<String, MenuItem>();
        menuItems = new ArrayList<String>();
        employees = new HashMap<String, Employee>();
        initialize(menu);
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RestaurantGUI().setVisible(true);
            }
        });

    }

    public static void initialize(Map<String, MenuItem> menu) throws IOException {
        File inFile = new File("menu.txt");
        Scanner inFileSC = new Scanner(inFile);
        inFileSC.nextLine();
        while (inFileSC.hasNext()) {
            String menuItemInfo = inFileSC.nextLine();
//            double price = Double.parseDouble(inFileSC.nextLine());
//            int inventory = Integer.parseInt(inFileSC.nextLine());
            String[] arr = menuItemInfo.split("/");
            String name = arr[0];

            double price = Double.parseDouble(arr[1]);
            int inventory = Integer.parseInt(arr[2]);
            System.out.println(name + " " + price + " " + inventory);
            menuItems.add(name);
            loadMenu(name, price, inventory, menu);
        }
    }

    public static void loadMenu(String name, double price, int inventory, Map<String, MenuItem> menu) {

        MenuItem item = new MenuItem(name, price, inventory);
        menu.put(item.getName(), item);
    }

    static public Employee getEmployee() {
        return emp;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddMenuItemButton;
    private javax.swing.JButton AddUserButton;
    private javax.swing.JPanel AdminContentPane;
    private javax.swing.JComboBox<String> AdminDropDown;
    private javax.swing.JPanel AdminOptionPanel;
    private javax.swing.JPanel AdminPanel;
    private javax.swing.JTextField AdminResponseTextField1;
    private javax.swing.JTextField AdminResponseTextField2;
    private javax.swing.JButton AdminSignOutButton;
    private javax.swing.JButton AdminToUserButton;
    private javax.swing.JPanel CheckoutPanel;
    private javax.swing.JPanel ContentPane;
    private javax.swing.JButton DoneButton1;
    private javax.swing.JPanel EmployeeContentPane;
    private javax.swing.JPanel EmployeePanel;
    private javax.swing.JButton EmployeeSignOutButton;
    private javax.swing.JButton InventoryAddButton;
    private javax.swing.JButton InventorySubtractButton;
    private javax.swing.JTextField ItemAddTextField;
    private javax.swing.JLabel ItemNameLabel;
    private javax.swing.JLabel ItemNameLabel1;
    private javax.swing.JLabel ItemNameLabel2;
    private javax.swing.JLabel ItemPriceLabel;
    private javax.swing.JTextField ItemPriceTextField;
    private javax.swing.JLabel ItemQuantityLabel;
    private javax.swing.JTextField ItemQuantityTextField;
    private javax.swing.JButton LoginButton;
    private javax.swing.JPanel LoginPanel;
    private javax.swing.JButton LoginScreenExitButton;
    private javax.swing.JButton ManageMenuButton;
    private javax.swing.JPanel ManageMenuPanel;
    private javax.swing.JButton ManageUsersButton;
    private javax.swing.JButton ManageUsersDoneButton;
    private javax.swing.JPanel ManageUsersPanel;
    private javax.swing.JScrollPane Menu;
    private javax.swing.JTable MenuItems;
    private javax.swing.JButton OrderAddButton;
    private javax.swing.JButton OrderBackButton;
    private javax.swing.JPanel OrderPanel;
    private javax.swing.JButton OrderRemove;
    private javax.swing.JScrollPane Ordered;
    private javax.swing.JButton OrdersButton;
    private javax.swing.JPasswordField PinField;
    private javax.swing.JLabel PinLabel;
    private javax.swing.JTextField PinTextField;
    private javax.swing.JButton RemoveMenuItemButton;
    private javax.swing.JButton RemoveUserButton;
    private javax.swing.JLabel RemoveWarningLabel;
    private javax.swing.JTextField SelectedInventoryTextField;
    private javax.swing.JTable StockTable;
    private javax.swing.JButton Table1Button;
    private javax.swing.JButton Table2Button;
    private javax.swing.JButton Table3Button;
    private javax.swing.JButton Table4Button;
    private javax.swing.JButton TableBackButton;
    private javax.swing.JTable TableBill;
    private javax.swing.JLabel TableServerLabel;
    private javax.swing.JPanel TablesPanel;
    private javax.swing.JLabel TextAdministratorOptions;
    private javax.swing.JLabel TextManageMenu;
    private javax.swing.JLabel TextManageUsers;
    private javax.swing.JButton TimeButton;
    private javax.swing.JTextField TimeEmployeeTextField;
    private javax.swing.JButton TimeInButton;
    private javax.swing.JTextField TimeInTextField;
    private javax.swing.JButton TimeOutButton;
    private javax.swing.JTextField TimeOutTextField;
    private javax.swing.JPanel TimePanel;
    private javax.swing.JButton TimePanelBackButton;
    private javax.swing.JButton UpdateInventoryButton;
    private javax.swing.JTextField UpdateStockTextField;
    private javax.swing.JComboBox<String> UserDropDown;
    private javax.swing.JTextField UserResponseTextField;
    private javax.swing.JTextField UserResponseTextField4;
    private javax.swing.JButton UserToAdminButton;
    private javax.swing.JLabel UsernameLabel;
    private javax.swing.JTextField UsernameTextField;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField lastInitialTextField;
    // End of variables declaration//GEN-END:variables
}
